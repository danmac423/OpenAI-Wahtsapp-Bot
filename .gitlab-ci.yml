stages:
  - build
  - publish
  - dockerize
  - deploy

variables:
  MAVEN_CLI_OPTS: "-s settings.xml -B"

default:
  image: maven:3.9.9-eclipse-temurin-21

cache:
  key: shared-m2-repo
  paths:
    - /root/.m2/repository
  policy: pull-push

build:
  stage: build
  script:
    - echo "Building and Testing project..."
    - mvn $MAVEN_CLI_OPTS clean install
  artifacts:
    paths:
      - target/*.jar


publish_artifacts:
  stage: publish
  script:
    - echo "Publishing artifacts..."
    - mvn $MAVEN_CLI_OPTS deploy -DskipTests
  dependencies:
    - build
  only:
    - main

dockerize:
  stage: dockerize
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add --no-cache curl jq
  script:
    - echo "Downloading .jar file..."
    - chmod +x scripts/download_artifact.sh
    - ./scripts/download_artifact.sh $GITHUB_TOKEN

    - echo "Logging in..."
    - echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin docker.io

    - echo "Building Docker image..."
    - docker build -t $DOCKERHUB_USERNAME/whatsappbroski:latest .

    - echo "Pushing image to DockerHub"
    - docker push $DOCKERHUB_USERNAME/whatsappbroski:latest
  dependencies:
    - publish_artifacts
  only:
    - main

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk update
    - apk add openssh bash
  script:
    - mkdir /root/.ssh
    - echo "${AZURE_PRIVATE_KEY}" >> /root/.ssh/vm_private_key.pem
    - chmod 400 /root/.ssh/vm_private_key.pem
    - ssh-keyscan -H 4.180.122.198 >> /root/.ssh/known_hosts
    - ssh -i /root/.ssh/vm_private_key.pem azureuser@4.180.122.198 'bash -s' < scripts/deploy.sh $DOCKERHUB_USERNAME $DOCKERHUB_TOKEN $WHATSAPP_API_URL $WHATSAPP_API_TOKEN $WHATSAPP_API_WEBHOOK_TOKEN $OPENAI_API_MODEL $OPENAI_API_URL $OPENAI_API_KEY
  dependencies:
    - dockerize
  only:
    - main
